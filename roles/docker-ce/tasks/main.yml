---

  - name: add repository
    yum_repository:
      name: docker-ce-stable
      description: Docker CE Stable - $basearch
      baseurl: https://download.docker.com/linux/centos/7/$basearch/stable
      gpgkey: https://download.docker.com/linux/centos/gpg
      state: present

  - name: install docker-ce-stable yum package
    yum:
      name: docker-ce
      state: latest

  - name: create docker volume group
    lvg: 
      vg: docker 
      pvs: "/dev/{{ docker_disk }}"
      state: present

  - name : create thinpool for docker
    lvol: 
      vg: docker
      lv: thinpool
      size: 90%VG
      opts: --wipesignatures y
      state: present

#  - name : check thinpoolmeta exists
#    command: lvdisplay /dev/docker/thinpoolmeta
#    ignore_errors: yes
#    register: thinpoolmeta_exists

  - name : create meta for docker
    lvol: 
      vg: docker
      lv: thinpoolmeta
      size: 5%VG
      opts: --wipesignatures y
    when:  hostvars[inventory_hostname]['ansible_lvm']['lvs']['thinpool'] is not defined
      
  - name: test if pool is already converted to thinpool
    shell: lvs -o lv_attr docker/thinpool | tail -1 | awk '{print $1}' | cut -c1
    register: thinpool_converted

  - name: convert pool to a thinpool
    command: lvconvert -y --zero n -c 512K --thinpool docker/thinpool --poolmetadata docker/thinpoolmeta
    when: thinpool_converted.stdout != "t"
      

  - name: Configure autoextension of thin pools via an lvm profile
    copy:
      src: docker-thinpool.profile
      dest: /etc/lvm/profile/docker-thinpool.profile

  - name: Apply your new lvm profile
    command: lvchange --metadataprofile docker-thinpool docker/thinpool

  - name: create directory /etc/docker
    file: path=/etc/docker state=directory

  - name: configure docker daemon
    copy:
      src: daemon.json
      dest: /etc/docker/daemon.json

  - name: check if user evs exists
    shell: "grep evs: /etc/passwd | wc -l"
    register: evs_exists
    changed_when: false

  - debug: var=evs_exists

  - name: add group to user evs
    user:
      name: evs
      groups: docker
      append: yes
    when: evs_exists.stdout == "1"

  - name: start and enable docker
    systemd:
      name: docker
      enabled: true
      state: started
